version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DBNAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: .
      dockerfile: gateway/cmd/auth-service/Dockerfile
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy

  price-monitoring-service:
    build:
      context: .
      dockerfile: gateway/cmd/price-monitoring-service/Dockerfile
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DBNAME=${PG_DBNAME}
    depends_on:
      postgres:
        condition: service_healthy

  api-gateway:
    build:
      context: .
      dockerfile: gateway/cmd/api-gateway/Dockerfile
    environment:
      - AUTH_SERVICE_ADDR=${AUTH_SERVICE_ADDR}
      - PRICE_SERVICE_ADDR=${PRICE_SERVICE_ADDR}
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - price-monitoring-service

  telegram-bot:
    build:
      context: .
      dockerfile: gateway/cmd/telegram-bot/Dockerfile
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - GATEWAY_URL=${GATEWAY_URL}
    depends_on:
      - api-gateway

volumes:
  pgdata: